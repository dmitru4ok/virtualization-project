---
  - name: Configure db VM
    hosts: db
    vars_files:
      - ../misc/db_auth.yaml
    become: true
    vars:
      default_container_name: postgres-server
      default_container_image: postgres
      ansible_user: "{{ db_user }}"

    tasks:
      - name: packages | ensure apt list dir exists
        file:
          path: /var/lib/apt/lists/
          state: directory
          mode: 0755

      - name: Install required system packages
        apt:
          pkg:
            - aptitude
            - apt-transport-https
            - ca-certificates
            - curl
            - software-properties-common
            - python3-pip
            - virtualenv
            - python3-setuptools
            - postgresql-client
          state: latest
          update_cache: true

      - name: Add Docker GPG apt Key
        apt_key:
          url: https://download.docker.com/linux/ubuntu/gpg
          state: present

      - name: Add Docker Repository
        apt_repository:
          repo: deb https://download.docker.com/linux/ubuntu focal stable
          state: present

      - name: Update apt and install docker-ce
        apt:
          name: docker-ce
          state: latest
          update_cache: true

      - name: Install Docker Module for Python
        pip:
          name:
            - docker
            - psycopg2-binary

      - name: Pull Postgres Docker image
        community.docker.docker_image:
          name: "{{ default_container_image }}"
          source: pull

      - name: Create postgres container
        community.docker.docker_container:
          name: "{{ default_container_name }}"
          image: "{{ default_container_image }}"
          state: present
          env:
            POSTGRES_PASSWORD: "{{ POSTGRES_PASSWORD }}"
            POSTGRES_USER: "{{ POSTGRES_USER }}"
            POSTGRES_DB: "{{ POSTGRES_DB }}"
          ports:
            - "5432:5432"

      - name: Ensure postgres container is started
        community.docker.docker_container:
          name: "{{ default_container_name }}"
          state: started

      - name: Pause for 10 seconds to ensure the container is fully up
        pause:
          seconds: 10

      - name: Copy database setup script to remote host
        ansible.builtin.copy:
          src:  ~/virtualization-project/telecomms/misc/dbsetup.sql
          dest: /tmp/
          mode: '0755'

      - name: setup database tables
        community.postgresql.postgresql_script:
          path: /tmp/dbsetup.sql
          db: "{{ POSTGRES_DB }}"
          login: "{{ POSTGRES_USER }}"
          login_password: "{{ POSTGRES_PASSWORD }}"
          host: "127.0.0.1"
